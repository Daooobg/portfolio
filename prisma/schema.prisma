// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model UserProfile {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt

  sessions   Session[]
  portfolios Projects[]
}

model Session {
  id          String      @id @default(uuid())
  userId      String
  expiresAt   DateTime
  userProfile UserProfile @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Settings {
  id                 Int     @id @default(autoincrement())
  registerPermission Boolean @default(false)
  visibleProjects    Int     @default(3)
}

model Projects {
  id          String   @id @default(uuid())
  projectName String
  mainImage   String
  otherImages String[]

  messages   Messages? @relation("ProjectsToMessages", fields: [messagesId], references: [id])
  messagesId String?   @unique

  links   Links?  @relation("ProjectsToLinks", fields: [linksId], references: [id])
  linksId String? @unique

  userProfile   UserProfile @relation(fields: [userProfileId], references: [id], onDelete: Cascade)
  userProfileId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Messages {
  id       String @id @default(uuid())
  enHeader String
  enText   String
  bgHeader String
  bgText   String

  projects Projects? @relation("ProjectsToMessages")
}

model Links {
  id          String @id @default(uuid())
  liveProject String
  github      String

  projects Projects? @relation("ProjectsToLinks")
}
